# For more information on configuration, see:
#   * Official English Documentation: http://nginx.org/en/docs/
#   * Official Russian Documentation: http://nginx.org/ru/docs/

user  nginx;
worker_processes  1;
worker_rlimit_nofile 100000;

#error_log  /var/log/nginx/error.log;
error_log  /var/log/nginx/error.log  notice;
#error_log  /var/log/nginx/error.log  info;

pid        /var/run/nginx.pid;

events {
    worker_connections  1024;
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    log_format  isucon '$time_local $msec\t$status\treqtime:$request_time\t'
                       'in:$request_length\tout:$bytes_sent\trequest:$request\t'
                       'acceptencoding:$http_accept_encoding\treferer:$http_referer\t'
                       'ua:$http_user_agent';

    access_log  /var/log/nginx/access.log  isucon;
    #access_log off;
    proxy_cache_path /dev/shm/nginx-cache levels=2:2 keys_zone=isucon:100m;
    open_file_cache max=10000;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  120;
    keepalive_requests 10000;

    #gzip  on;

    # Load modular configuration files from the /etc/nginx/conf.d directory.
    # See http://nginx.org/en/docs/ngx_core_module.html#include
    # for more information.
    include /etc/nginx/conf.d/*.conf;

    index   index.html index.htm;

    #upstream isucon {
    #    server 127.0.0.1:5000;
    #    keepalive 4;
    #}
    upstream isucon {
        server unix:/tmp/gunicorn.sock;
        #server 127.0.0.1:5000;
        keepalive 8;
    }
    upstream isucon2 {
        server unix:/tmp/gunicorn2.sock;
        #server 127.0.0.1:5000;
        keepalive 8;
    }

    server {
        listen       80;
        server_name  localhost;
        root         /home/isu-user/isucon/webapp/public;

        #charset koi8-r;
        #access_log  /var/log/nginx/host.access.log  main;

        location ~ .*(css|js|ico)$ {
        }

        location / {
            proxy_pass http://isucon;
            proxy_set_header Host $host;

	    proxy_cache isucon;
            proxy_cache_valid 1s;
	    set $no_cache 0;
	    if ($cookie_isucon_session_python) {
		set $no_cache 1;
	    }
	    proxy_cache_bypass $no_cache;
	    proxy_no_cache $no_cache;
            proxy_cache_lock on;
        }
        location /mypage {
            proxy_pass http://isucon2;
            proxy_set_header Host $host;
        }
        location ~ ^/memo/.* {
            proxy_pass http://isucon;
            proxy_set_header Host $host;

	    proxy_cache isucon;
            proxy_cache_valid 1h;
	    set $no_cache 0;
	    if ($cookie_isucon_session_python) {
                #rewrite ^/memo/(.*) /usermemo/$1 last;
		set $no_cache 1;
	    }
	    proxy_cache_bypass $no_cache;
	    proxy_no_cache $no_cache;
            proxy_cache_lock on;
        }
        #location /usermemo/ {
        #    internal;
        #    proxy_pass http://isucon2;
        #    proxy_set_header Host $host;
        #}
    }

    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;
    #    root         html;

    #    location / {
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443;
    #    server_name  localhost;
    #    root         html;

    #    ssl                  on;
    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_timeout  5m;

    #    ssl_protocols  SSLv2 SSLv3 TLSv1;
    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers   on;

    #    location / {
    #    }
    #}

}
